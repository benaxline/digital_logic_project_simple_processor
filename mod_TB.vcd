$date
	Tue May 23 17:39:27 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module mod_TB $end
$var wire 16 ! bus [15:0] $end
$var wire 16 " g [15:0] $end
$var wire 16 # temp1 [15:0] $end
$var wire 16 $ t7 [15:0] $end
$var wire 16 % t6 [15:0] $end
$var wire 16 & t5 [15:0] $end
$var wire 16 ' t4 [15:0] $end
$var wire 16 ( t3 [15:0] $end
$var wire 16 ) t2 [15:0] $end
$var wire 16 * t1 [15:0] $end
$var wire 16 + t0 [15:0] $end
$var wire 8 , reg_out [7:0] $end
$var wire 8 - reg_in [7:0] $end
$var wire 7 . math_out [6:0] $end
$var wire 1 / g_out $end
$var wire 1 0 g_in $end
$var wire 1 1 data_out $end
$var wire 5 2 current_state [4:0] $end
$var wire 16 3 a_out [15:0] $end
$var wire 1 4 a_in $end
$var wire 1 5 AddSub $end
$var reg 1 6 clk $end
$var reg 5 7 count [4:0] $end
$var reg 4 8 func [3:0] $end
$var reg 16 9 in1 [15:0] $end
$var reg 16 : in2 [15:0] $end
$scope module A $end
$var wire 1 6 clk $end
$var wire 16 ; x [15:0] $end
$var wire 1 4 enable $end
$var reg 16 < y [15:0] $end
$upscope $end
$scope module D $end
$var wire 16 = a [15:0] $end
$var wire 1 1 enable $end
$var reg 16 > b [15:0] $end
$upscope $end
$scope module G $end
$var wire 1 6 clk $end
$var wire 16 ? x [15:0] $end
$var wire 1 0 enable $end
$var reg 16 @ y [15:0] $end
$upscope $end
$scope module R0 $end
$var wire 1 6 clk $end
$var wire 1 A enable $end
$var wire 16 B x [15:0] $end
$var reg 16 C y [15:0] $end
$upscope $end
$scope module R1 $end
$var wire 1 6 clk $end
$var wire 1 D enable $end
$var wire 16 E x [15:0] $end
$var reg 16 F y [15:0] $end
$upscope $end
$scope module R2 $end
$var wire 1 6 clk $end
$var wire 1 G enable $end
$var wire 16 H x [15:0] $end
$var reg 16 I y [15:0] $end
$upscope $end
$scope module R3 $end
$var wire 1 6 clk $end
$var wire 1 J enable $end
$var wire 16 K x [15:0] $end
$var reg 16 L y [15:0] $end
$upscope $end
$scope module R4 $end
$var wire 1 6 clk $end
$var wire 1 M enable $end
$var wire 16 N x [15:0] $end
$var reg 16 O y [15:0] $end
$upscope $end
$scope module R5 $end
$var wire 1 6 clk $end
$var wire 1 P enable $end
$var wire 16 Q x [15:0] $end
$var reg 16 R y [15:0] $end
$upscope $end
$scope module R6 $end
$var wire 1 6 clk $end
$var wire 1 S enable $end
$var wire 16 T x [15:0] $end
$var reg 16 U y [15:0] $end
$upscope $end
$scope module R7 $end
$var wire 1 6 clk $end
$var wire 1 V enable $end
$var wire 16 W x [15:0] $end
$var reg 16 X y [15:0] $end
$upscope $end
$scope module T0 $end
$var wire 16 Y a [15:0] $end
$var wire 1 Z enable $end
$var reg 16 [ b [15:0] $end
$upscope $end
$scope module T1 $end
$var wire 16 \ a [15:0] $end
$var wire 1 ] enable $end
$var reg 16 ^ b [15:0] $end
$upscope $end
$scope module T2 $end
$var wire 16 _ a [15:0] $end
$var wire 1 ` enable $end
$var reg 16 a b [15:0] $end
$upscope $end
$scope module T3 $end
$var wire 16 b a [15:0] $end
$var wire 1 c enable $end
$var reg 16 d b [15:0] $end
$upscope $end
$scope module T4 $end
$var wire 16 e a [15:0] $end
$var wire 1 f enable $end
$var reg 16 g b [15:0] $end
$upscope $end
$scope module T5 $end
$var wire 16 h a [15:0] $end
$var wire 1 i enable $end
$var reg 16 j b [15:0] $end
$upscope $end
$scope module T6 $end
$var wire 16 k a [15:0] $end
$var wire 1 l enable $end
$var reg 16 m b [15:0] $end
$upscope $end
$scope module T7 $end
$var wire 16 n a [15:0] $end
$var wire 1 o enable $end
$var reg 16 p b [15:0] $end
$upscope $end
$scope module alu $end
$var wire 1 q AddSub $end
$var wire 16 r g [15:0] $end
$var wire 16 s p [15:0] $end
$var wire 16 t q [15:0] $end
$var wire 16 u xor_out [15:0] $end
$var wire 16 v sub_out [15:0] $end
$var wire 16 w or_out [15:0] $end
$var wire 16 x mod_out [15:0] $end
$var wire 7 y math_out [6:0] $end
$var wire 16 z divide_out [15:0] $end
$var wire 16 { and_out [15:0] $end
$var wire 16 | add_out [15:0] $end
$scope module addme $end
$var wire 16 } a [15:0] $end
$var wire 1 q addsub $end
$var wire 16 ~ b [15:0] $end
$var wire 1 !" t $end
$var wire 16 "" out [15:0] $end
$upscope $end
$scope module addtri $end
$var wire 16 #" a [15:0] $end
$var wire 1 $" enable $end
$var reg 16 %" b [15:0] $end
$upscope $end
$scope module andme $end
$var wire 16 &" a [15:0] $end
$var wire 16 '" b [15:0] $end
$var wire 16 (" g [15:0] $end
$upscope $end
$scope module andtri $end
$var wire 16 )" a [15:0] $end
$var wire 1 *" enable $end
$var reg 16 +" b [15:0] $end
$upscope $end
$scope module divme $end
$var wire 16 ," dividend [15:0] $end
$var wire 16 -" divisor [15:0] $end
$var wire 16 ." remainder [15:0] $end
$var wire 16 /" quotient [15:0] $end
$upscope $end
$scope module divtri $end
$var wire 16 0" a [15:0] $end
$var wire 1 1" enable $end
$var reg 16 2" b [15:0] $end
$upscope $end
$scope module modtri $end
$var wire 16 3" a [15:0] $end
$var wire 1 4" enable $end
$var reg 16 5" b [15:0] $end
$upscope $end
$scope module my_xor $end
$var wire 16 6" a [15:0] $end
$var wire 16 7" b [15:0] $end
$var wire 16 8" g [15:0] $end
$upscope $end
$scope module orme $end
$var wire 16 9" a [15:0] $end
$var wire 16 :" b [15:0] $end
$var wire 16 ;" g [15:0] $end
$upscope $end
$scope module ortri $end
$var wire 16 <" a [15:0] $end
$var wire 1 =" enable $end
$var reg 16 >" b [15:0] $end
$upscope $end
$scope module subme $end
$var wire 16 ?" a [15:0] $end
$var wire 16 @" b [15:0] $end
$var wire 16 A" out [15:0] $end
$upscope $end
$scope module subtri $end
$var wire 16 B" a [15:0] $end
$var wire 1 C" enable $end
$var reg 16 D" b [15:0] $end
$upscope $end
$scope module xortri $end
$var wire 16 E" a [15:0] $end
$var wire 1 F" enable $end
$var reg 16 G" b [15:0] $end
$upscope $end
$upscope $end
$scope module cc $end
$var wire 1 6 clk $end
$var wire 4 H" func [3:0] $end
$var wire 16 I" input1 [15:0] $end
$var wire 16 J" input2 [15:0] $end
$var wire 8 K" temp2 [7:0] $end
$var wire 8 L" temp1 [7:0] $end
$var wire 9 M" temp [8:0] $end
$var wire 5 N" current_state [4:0] $end
$var reg 1 5 AddSub $end
$var reg 8 O" R_in [7:0] $end
$var reg 8 P" R_out [7:0] $end
$var reg 1 4 a_in $end
$var reg 1 1 data_out $end
$var reg 1 0 g_in $end
$var reg 1 / g_out $end
$var reg 7 Q" math_enables [6:0] $end
$var reg 5 R" next_state [4:0] $end
$scope module in1 $end
$var wire 1 6 clk $end
$var wire 16 S" reg_num [15:0] $end
$var reg 8 T" reg_enable [7:0] $end
$upscope $end
$scope module in2 $end
$var wire 1 6 clk $end
$var wire 16 U" reg_num [15:0] $end
$var reg 8 V" reg_enable [7:0] $end
$upscope $end
$upscope $end
$scope module g_buf $end
$var wire 16 W" a [15:0] $end
$var wire 1 / enable $end
$var reg 16 X" b [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0zzz X"
bx W"
b100 V"
b101 U"
b10000000 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
b100000 M"
b10000000 L"
b100 K"
b101 J"
b0 I"
b1 H"
b0zzz G"
0F"
bx E"
b0zzz D"
0C"
bx B"
bx A"
b0zzz @"
bx ?"
b0zzz >"
0="
bx <"
bx ;"
b0zzz :"
bx 9"
bx 8"
b0zzz 7"
bx 6"
b0zzz 5"
04"
bx 3"
b0zzz 2"
01"
bx 0"
bx /"
bx ."
b0zzz -"
bx ,"
b0zzz +"
0*"
b0xxx )"
b0xxx ("
b0zzz '"
bx &"
b0zzz %"
0$"
bx #"
bx ""
0!"
b0zzz ~
bx }
bx |
b0xxx {
bx z
b0 y
bx x
bx w
bx v
bx u
b0zzz t
bx s
b0zzz r
zq
b0zzz p
0o
bx n
b0zzz m
0l
bx k
b0zzz j
0i
bx h
b0zzz g
0f
bx e
b0zzz d
0c
bx b
b0zzz a
0`
bx _
b0zzz ^
0]
bx \
b0zzz [
0Z
bx Y
bx X
b0zzz W
0V
bx U
b0zzz T
0S
bx R
b0zzz Q
0P
bx O
b0zzz N
0M
bx L
b0zzz K
0J
bx I
b0zzz H
0G
bx F
b0zzz E
0D
bx C
b0zzz B
0A
bx @
b0zzz ?
b0zzz >
b101 =
bx <
b0zzz ;
b101 :
b0 9
b1 8
b0 7
16
05
04
bx 3
b0 2
01
00
0/
b0 .
b0 -
b0 ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
b0zzz "
b0zzz !
$end
#50000
b101 +
b101 C
b101 Y
b0x0x {
b0x0x ("
b0x0x )"
bx1x1 w
bx1x1 ;"
bx1x1 <"
1A
b101 !
b101 ;
b101 B
b101 E
b101 H
b101 K
b101 N
b101 Q
b101 T
b101 W
b101 t
b101 ~
b101 '"
b101 -"
b101 7"
b101 :"
b101 @"
b101 >
b10000000 -
b10000000 O"
11
b100001 M"
b1 2
b1 N"
b1 R"
06
b1 7
#100000
0A
b0 -
b0 O"
b0xxx {
b0xxx ("
b0xxx )"
bx w
bx ;"
bx <"
b0zzz !
b0zzz ;
b0zzz B
b0zzz E
b0zzz H
b0zzz K
b0zzz N
b0zzz Q
b0zzz T
b0zzz W
b0zzz t
b0zzz ~
b0zzz '"
b0zzz -"
b0zzz 7"
b0zzz :"
b0zzz @"
b0zzz >
01
b100000 M"
b0 2
b0 N"
b0 R"
b1000 L"
b1000 T"
b100 9
b100 I"
b100 S"
16
b10 7
#150000
b101 '
b101 O
b101 e
b0x0x {
b0x0x ("
b0x0x )"
bx1x1 w
bx1x1 ;"
bx1x1 <"
1M
b101 !
b101 ;
b101 B
b101 E
b101 H
b101 K
b101 N
b101 Q
b101 T
b101 W
b101 t
b101 ~
b101 '"
b101 -"
b101 7"
b101 :"
b101 @"
b101 >
b1000 -
b1000 O"
11
b100001 M"
b1 2
b1 N"
b1 R"
06
b11 7
#200000
0M
b0 -
b0 O"
b0xxx {
b0xxx ("
b0xxx )"
bx w
bx ;"
bx <"
b0zzz !
b0zzz ;
b0zzz B
b0zzz E
b0zzz H
b0zzz K
b0zzz N
b0zzz Q
b0zzz T
b0zzz W
b0zzz t
b0zzz ~
b0zzz '"
b0zzz -"
b0zzz 7"
b0zzz :"
b0zzz @"
b0zzz >
01
b100000 M"
b0 2
b0 N"
b0 R"
b1000 K"
b1000 V"
b100000 L"
b100000 T"
b100 :
b100 =
b100 J"
b100 U"
b10 9
b10 I"
b10 S"
16
b100 7
#250000
b100 )
b100 I
b100 _
b0x00 {
b0x00 ("
b0x00 )"
bx1xx w
bx1xx ;"
bx1xx <"
1G
b100 !
b100 ;
b100 B
b100 E
b100 H
b100 K
b100 N
b100 Q
b100 T
b100 W
b100 t
b100 ~
b100 '"
b100 -"
b100 7"
b100 :"
b100 @"
b100 >
b100000 -
b100000 O"
11
b100001 M"
b1 2
b1 N"
b1 R"
06
b101 7
#300000
0G
b0 -
b0 O"
b0xxx {
b0xxx ("
b0xxx )"
bx w
bx ;"
bx <"
b0zzz !
b0zzz ;
b0zzz B
b0zzz E
b0zzz H
b0zzz K
b0zzz N
b0zzz Q
b0zzz T
b0zzz W
b0zzz t
b0zzz ~
b0zzz '"
b0zzz -"
b0zzz 7"
b0zzz :"
b0zzz @"
b0zzz >
01
b100000 M"
b0 2
b0 N"
b0 R"
b1000000 K"
b1000000 V"
b100 L"
b100 T"
b1 :
b1 =
b1 J"
b1 U"
b101 9
b101 I"
b101 S"
16
b110 7
#350000
b1 &
b1 R
b1 h
b0x {
b0x ("
b0x )"
bx1 w
bx1 ;"
bx1 <"
1P
b1 !
b1 ;
b1 B
b1 E
b1 H
b1 K
b1 N
b1 Q
b1 T
b1 W
b1 t
b1 ~
b1 '"
b1 -"
b1 7"
b1 :"
b1 @"
b1 >
b100 -
b100 O"
11
b100001 M"
b1 2
b1 N"
b1 R"
06
b111 7
#400000
0P
b0 -
b0 O"
b0xxx {
b0xxx ("
b0xxx )"
bx w
bx ;"
bx <"
b0zzz !
b0zzz ;
b0zzz B
b0zzz E
b0zzz H
b0zzz K
b0zzz N
b0zzz Q
b0zzz T
b0zzz W
b0zzz t
b0zzz ~
b0zzz '"
b0zzz -"
b0zzz 7"
b0zzz :"
b0zzz @"
b0zzz >
01
b0 2
b0 N"
b0 R"
b100 K"
b100 V"
b10000000 L"
b10000000 T"
b101 :
b101 =
b101 J"
b101 U"
b0 9
b0 I"
b0 S"
b1000000 M"
b10 8
b10 H"
16
b1000 7
#450000
b0zzz +
b0zzz C
b0zzz Y
b0x {
b0x ("
b0x )"
bx1 w
bx1 ;"
bx1 <"
b1 !
b1 ;
b1 B
b1 E
b1 H
b1 K
b1 N
b1 Q
b1 T
b1 W
b1 t
b1 ~
b1 '"
b1 -"
b1 7"
b1 :"
b1 @"
b1 j
1i
1A
b100 ,
b100 P"
b10000000 -
b10000000 O"
b1000010 M"
b10 2
b10 N"
b10 R"
06
b1001 7
#500000
b0xxx {
b0xxx ("
b0xxx )"
bx w
bx ;"
bx <"
b0zzz !
b0zzz ;
b0zzz B
b0zzz E
b0zzz H
b0zzz K
b0zzz N
b0zzz Q
b0zzz T
b0zzz W
b0zzz t
b0zzz ~
b0zzz '"
b0zzz -"
b0zzz 7"
b0zzz :"
b0zzz @"
b0zzz j
0i
0A
b1 +
b1 C
b1 Y
b0 ,
b0 P"
b0 -
b0 O"
b1000000 M"
b0 2
b0 N"
b0 R"
b10000000 K"
b10000000 V"
b100000 L"
b100000 T"
b0 :
b0 =
b0 J"
b0 U"
b10 9
b10 I"
b10 S"
16
b1010 7
#550000
b0zzz )
b0zzz I
b0zzz _
b0x {
b0x ("
b0x )"
bx1 w
bx1 ;"
bx1 <"
b1 !
b1 ;
b1 B
b1 E
b1 H
b1 K
b1 N
b1 Q
b1 T
b1 W
b1 t
b1 ~
b1 '"
b1 -"
b1 7"
b1 :"
b1 @"
b1 [
1Z
1G
b10000000 ,
b10000000 P"
b100000 -
b100000 O"
b1000010 M"
b10 2
b10 N"
b10 R"
06
b1011 7
#600000
b0xxx {
b0xxx ("
b0xxx )"
bx w
bx ;"
bx <"
b0zzz !
b0zzz ;
b0zzz B
b0zzz E
b0zzz H
b0zzz K
b0zzz N
b0zzz Q
b0zzz T
b0zzz W
b0zzz t
b0zzz ~
b0zzz '"
b0zzz -"
b0zzz 7"
b0zzz :"
b0zzz @"
b0zzz [
0Z
0G
b1 )
b1 I
b1 _
b0 ,
b0 P"
b0 -
b0 O"
b0 2
b0 N"
b0 R"
b100 K"
b100 V"
b10000000 L"
b10000000 T"
b101 :
b101 =
b101 J"
b101 U"
b0 9
b0 I"
b0 S"
b100100000 M"
b1001 8
b1001 H"
16
b1100 7
#650000
b0xxx u
b0xxx 8"
b0xxx E"
b0zzz 3
b0zzz <
b0zzz s
b0zzz }
b0zzz &"
b0zzz ,"
b0zzz 6"
b0zzz 9"
b0zzz ?"
b0x {
b0x ("
b0x )"
b0xx1 w
b0xx1 ;"
b0xx1 <"
bx "
bx ?
bx r
bx 5"
b1 !
b1 ;
b1 B
b1 E
b1 H
b1 K
b1 N
b1 Q
b1 T
b1 W
b1 t
b1 ~
b1 '"
b1 -"
b1 7"
b1 :"
b1 @"
b1 [
14"
1Z
b1 .
b1 y
b1 Q"
14
b10000000 ,
b10000000 P"
b100110110 M"
b10110 2
b10110 N"
b10110 R"
06
b1101 7
#700000
b1 {
b1 ("
b1 )"
b0 "
b0 ?
b0 r
b0 5"
b0 u
b0 8"
b0 E"
b1 w
b1 ;"
b1 <"
b10 |
b10 ""
b10 #"
b1 z
b1 /"
b1 0"
b0 x
b0 ."
b0 3"
b0 v
b0 A"
b0 B"
b1 3
b1 <
b1 s
b1 }
b1 &"
b1 ,"
b1 6"
b1 9"
b1 ?"
b1 j
b1 !
b1 ;
b1 B
b1 E
b1 H
b1 K
b1 N
b1 Q
b1 T
b1 W
b1 t
b1 ~
b1 '"
b1 -"
b1 7"
b1 :"
b1 @"
b0zzz [
1i
0Z
10
b100 ,
b100 P"
b100110111 M"
b10111 2
b10111 N"
b10111 R"
16
b1110 7
#750000
bx +
bx C
bx Y
b0 #
b0 @
b0 W"
b0 {
b0 ("
b0 )"
bx "
bx ?
bx r
bx 5"
b1 u
b1 8"
b1 E"
b1 w
b1 ;"
b1 <"
b0zzz j
b1 |
b1 ""
b1 #"
bx z
bx /"
bx 0"
bx x
bx ."
bx 3"
b1 v
b1 A"
b1 B"
b0 !
b0 ;
b0 B
b0 E
b0 H
b0 K
b0 N
b0 Q
b0 T
b0 W
b0 t
b0 ~
b0 '"
b0 -"
b0 7"
b0 :"
b0 @"
b0 X"
0i
1A
1/
04
b0 ,
b0 P"
b10000000 -
b10000000 O"
b100111000 M"
b11000 2
b11000 N"
b11000 R"
06
b1111 7
#800000
0A
b0 +
b0 C
b0 Y
b0 -
b0 O"
b0zzz "
b0zzz ?
b0zzz r
b0zzz 5"
b0x {
b0x ("
b0x )"
b0xxx u
b0xxx 8"
b0xxx E"
b0xx1 w
b0xx1 ;"
b0xx1 <"
04"
bx |
bx ""
bx #"
bx v
bx A"
bx B"
b0zzz !
b0zzz ;
b0zzz B
b0zzz E
b0zzz H
b0zzz K
b0zzz N
b0zzz Q
b0zzz T
b0zzz W
b0zzz t
b0zzz ~
b0zzz '"
b0zzz -"
b0zzz 7"
b0zzz :"
b0zzz @"
b0zzz X"
b0 .
b0 y
b0 Q"
0/
00
b100100000 M"
b0 2
b0 N"
b0 R"
16
b10000 7
#850000
b0zzz 3
b0zzz <
b0zzz s
b0zzz }
b0zzz &"
b0zzz ,"
b0zzz 6"
b0zzz 9"
b0zzz ?"
b0 {
b0 ("
b0 )"
b0xxx u
b0xxx 8"
b0xxx E"
b0xxx w
b0xxx ;"
b0xxx <"
bx "
bx ?
bx r
bx 5"
bx |
bx ""
bx #"
bx v
bx A"
bx B"
b0 !
b0 ;
b0 B
b0 E
b0 H
b0 K
b0 N
b0 Q
b0 T
b0 W
b0 t
b0 ~
b0 '"
b0 -"
b0 7"
b0 :"
b0 @"
b0 [
14"
1Z
b1 .
b1 y
b1 Q"
14
b10000000 ,
b10000000 P"
b100110110 M"
b10110 2
b10110 N"
b10110 R"
06
b10001 7
#900000
b10010 7
#950000
b10011 7
#1000000
b10100 7
